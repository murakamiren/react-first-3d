/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { FC, useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { Group } from "three";

type GLTFResult = GLTF & {
	nodes: {
		shoe: THREE.Mesh;
		shoe_1: THREE.Mesh;
		shoe_2: THREE.Mesh;
		shoe_3: THREE.Mesh;
		shoe_4: THREE.Mesh;
		shoe_5: THREE.Mesh;
		shoe_6: THREE.Mesh;
		shoe_7: THREE.Mesh;
	};
	materials: {
		laces: THREE.MeshStandardMaterial;
		mesh: THREE.MeshStandardMaterial;
		caps: THREE.MeshStandardMaterial;
		inner: THREE.MeshStandardMaterial;
		sole: THREE.MeshStandardMaterial;
		stripes: THREE.MeshStandardMaterial;
		band: THREE.MeshStandardMaterial;
		patch: THREE.MeshStandardMaterial;
	};
};

type ShoeColor = {
	laces: string;
	mess: string;
	caps: string;
};

type ShoeProps = {
	groupProps?: JSX.IntrinsicElements["group"];
	shoeColors: ShoeColor;
};

export const Shoe: FC<ShoeProps> = ({ shoeColors, ...props }) => {
	const groupRef = useRef<Group>(null!);
	const { nodes, materials } = useGLTF("/model/shoe/shoe.gltf") as any as GLTFResult;
	return (
		<group {...props} ref={groupRef} dispose={null}>
			<mesh geometry={nodes.shoe.geometry} material={materials.laces} material-color={shoeColors.laces} />
			<mesh geometry={nodes.shoe_1.geometry} material={materials.mesh} material-color={shoeColors.mess} />
			<mesh geometry={nodes.shoe_2.geometry} material={materials.caps} material-color={shoeColors.caps} />
			<mesh geometry={nodes.shoe_3.geometry} material={materials.inner} />
			<mesh geometry={nodes.shoe_4.geometry} material={materials.sole} />
			<mesh geometry={nodes.shoe_5.geometry} material={materials.stripes} />
			<mesh geometry={nodes.shoe_6.geometry} material={materials.band} />
			<mesh geometry={nodes.shoe_7.geometry} material={materials.patch} />
		</group>
	);
};

useGLTF.preload("/model/shoe/shoe.gltf");
